function Bricks.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push argument 0
push argument 1
call Math.multiply 2
call Array.new 1
pop this 0
push pointer 0
push argument 0
push argument 1
call Bricks.fillTheArray 3
pop temp 0
push pointer 0
return
function Bricks.dispose 0
push argument 0
pop pointer 0
push this 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Array.dispose 1
pop temp 0
label IF_FALSE0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Bricks.fillTheArray 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push argument 1
lt
not
if-goto WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push argument 2
lt
not
if-goto WHILE_END1
push local 0
push local 1
push argument 2
call Math.multiply 2
add
push this 0
add
push constant 5
push local 0
push constant 30
call Math.multiply 2
add
push constant 10
push local 1
push constant 10
call Math.multiply 2
add
call Brick.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Bricks.getBricks 0
push argument 0
pop pointer 0
push this 0
return
